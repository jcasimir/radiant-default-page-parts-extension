= Default Page Parts

This extension is a complete hack. It depends heavily upon the default page creation behavior of the Page class in Radiant > 0.6.9. It overrides Page.new_with_defaults to look for the file "parts.yml" in the root extension directory (i.e. vendor/extensions/default_page_parts/parts.yml) that should contain a YAML formatted list of page parts to create in the new child page.

*Important*: The configuration file parts.yml must contain at least one part (most likely named "body") or no page parts will be created.

If the file parts.yml doesn't exist the old "new_with_defaults" method will be called and will use the defaults set in Radiant::Config['defaults.page.parts'].  So if you wish to return to the old behavior simply remove parts.yml or rename it.

So it's a hack, but a useful one. Since this extension monkeypatches the singleton class of class Page, it applies to your pages globally and does not depend upon the page type. Depending upon your point of view this could be a blessing or a curse.  If you want to apply default page parts only to descendants of a certain page type you're going to have to come up with a better solution.  If all you want is a way to add default page parts with default content to any page created you're in luck.

= How to use it

Let's say you want all pages to have a default comments part.  Simply edit or add to parts.yml thusly:

---
- name: body
  filter: textile
- name: comments
  filter: textile
  content: "<r:snippet name='comments'/>" # or whatever you want the comments part to contain 

Now save the file and restart your server. Now when you add children to the any page, the child will automagically have a "comments" page part which will include the text "<r:snippet name='comments'/>" by default.

Note: As stated above, you can NOT currently confine the default parts to only children of a particular page.  This may change in the future.

TODO:
1.) More Testing
2.) Allow default parts for only children of a particular page.